function bearingToAnchor(a, b) {    //draw indicitive circle around point being examined    //var ellipse = app.activeDocument.layers[0].pathItems.polygon(a[0], a[1], 5, 5, false, false );    var dX = a[0] - b[0];    var dY = a[1] - b[1];        var length = round(Math.sqrt(dX*dX + dY*dY),5);    var angle = Math.atan2(dY, dX);    return { fromPoint:a, toPoint:b, length: length, angle: angle};}function pathIntersect(anchorA, anchorB, alpha, beta) {    var A1 = Math.sin(alpha);    var A2 = Math.sin(beta);    var B1 = -1*Math.cos(alpha);    var B2 = -1*Math.cos(beta);    var delta = A1*B2 - A2*B1;    var C1 = Math.sin(alpha) * anchorA[0] - Math.cos(alpha) * anchorA[1];    var C2 = Math.sin(beta) * anchorB[0] - Math.cos(beta) * anchorB[1];    if(delta != 0) {        var newx = (B2*C1 - B1*C2)/delta;        var newy = (A1*C2 - A2*C1)/delta;        return [newx, newy];    }    return null;}function bearingToAnchor(a, b) {    var dX = a[0] - b[0];    var dY = a[1] - b[1];        var length = Math.sqrt(dX*dX + dY*dY);    var angle = Math.atan2(dY, dX);    return { length: length, angle: angle};}