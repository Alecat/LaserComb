function getFirstSelectedPoint(pathPoints) {    for(var i=0;i<pathPoints.length;i++) {        if (pathPoints[i].selected == PathPointSelection.ANCHORPOINT) {            return pathPoints[i];        }    }    return null;}// When iterating through a series of points, we may need to loop back to the first point in the series// TODO don't loop for closed pathsfunction nextPointIndex(i, forwards, allPoints, closed) {    var index = forwards ? i+1 : i-1;    if (index < 0) {        if (!closed) {            return null;        }        index = allPoints.length - 1;    }    if (index >= allPoints.length) {        if (!closed) {            return null;        }        index = 0;    }    return index;}function calculatePathInfo(selection, clockwise) {    var pathPoints= selection.selectedPathPoints;        // Determine the 'left' and 'right' points    var leftPoint;    var rightPoint;    for (var i=0; i<pathPoints.length;i++){        if (pathPoints[i].selected == PathPointSelection.LEFTRIGHTPOINT) {            return false;        }        if (pathPoints[i].selected == PathPointSelection.LEFTDIRECTION) {            rightPoint = pathPoints[i];        }        if(pathPoints[i].selected == PathPointSelection.RIGHTDIRECTION) {            leftPoint = pathPoints[i];        }    }    if (leftPoint == null || rightPoint == null) {        return false;    }    var p2p = bearingToAnchor(rightPoint.anchor, leftPoint.anchor);    return {         leftPoint : leftPoint,        rightPoint : rightPoint,        angle : p2p.angle,        length : p2p.length    };}